@startuml Initial_vector_representation-model

class InitializeVectorRepresentation {
    - pattern: String
    - vectorSize: Integer
    + initialVectorRepresentation(): void
    - vectorRepresentationAllFiles(Dictionary[String]): Dictionary[String]
    - saveVectors(Dictionary[String]): void
}


class Embedding {
    + nodeEmbedding(): Dictionary[Node]
    - randomWalk(Node): List[Node.type]
    - findVectors(Word2Vec): Dictionary[Node]
}

class Node {

    + getChildren(): List[ASTNode]
    + descendants(): List[Node]
    + setChildren(Node): void
}


class NodeObjectCreator {
    + fileParser(path: String): Node
}

package CSV <<Rectangle>> {
    object CSVFile {
        InitialVectorRepresentation.csv
    }
}


InitializeVectorRepresentation "one" ..> "one" Embedding : uses
InitializeVectorRepresentation "one" ..> "many" NodeObjectCreator : uses
NodeObjectCreator "one"..> "many" Node : uses

InitializeVectorRepresentation "one" ..> "one" CSVFile: saves the vector representation for each type of node


@enduml